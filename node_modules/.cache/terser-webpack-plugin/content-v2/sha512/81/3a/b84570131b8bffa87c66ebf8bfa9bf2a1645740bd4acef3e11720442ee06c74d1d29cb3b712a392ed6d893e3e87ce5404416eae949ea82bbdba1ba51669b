{"code":"!function(e){var n={};function s(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=n,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var r in e)s.d(t,r,function(n){return e[n]}.bind(null,r));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,\"a\",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p=\"\",s(s.s=2)}([function(e,n,s){e.exports=s(1)},function(e,n,s){var t,r,a;a=function(){\"use strict\";var e={A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,NUMPAD_0:96,NUMPAD_1:97,NUMPAD_2:98,NUMPAD_3:99,NUMPAD_4:100,NUMPAD_5:101,NUMPAD_6:102,NUMPAD_7:103,NUMPAD_8:104,NUMPAD_9:105,NUMPAD_MULTIPLY:106,NUMPAD_ADD:107,NUMPAD_ENTER:108,NUMPAD_SUBTRACT:109,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,COLON:186,EQUALS:187,UNDERSCORE:189,QUESTION_MARK:191,TILDE:192,OPEN_BRACKET:219,BACKWARD_SLASH:220,CLOSED_BRACKET:221,QUOTES:222,LESS_THAN:188,GREATER_THAN:190,BACKSPACE:8,TAB:9,CLEAR:12,ENTER:13,SHIFT:16,CONTROL:17,ALT:18,CAPS_LOCK:20,ESC:27,SPACEBAR:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,INSERT:45,DELETE:46,HELP:47,NUM_LOCK:144};return e},e.exports?e.exports=a():void 0===(r=\"function\"==typeof(t=a)?t.call(n,s,n,e):t)||(e.exports=r)},function(e,n,s){\"use strict\";s.r(n);var t=s(0);const r=document.getElementById(\"terminal\"),a=document.getElementById(\"terminal-input\"),o=new class{constructor(){this.listeners=[]}on(e,n){this.listeners.push({on:e,callback:n})}once(e,n){const s=this,t={on:e,callback:e=>{n(e),s.listeners.splice(s.listeners.indexOf(t),1)}};this.listeners.push(t)}emit(e,n){const s=this.listeners.find(n=>n.on==e);s&&s.callback(n)}};r.addEventListener(\"change\",e=>{o.emit(\"change\",e)}),document.addEventListener(\"keydown\",e=>{a==document.activeElement&&e.keyCode==t.ENTER&&(o.emit(\"submit\",a.value),a.value=\"\")});const l=document.getElementById(\"terminal\");function i(e,n=!0){let s;console.log(e),\"[object Object]\"==(s=e?e.toString():\"null\")&&(s=JSON.stringify(e)),l.innerHTML+=`${n?\"<br/>\":\"\"}${s}`}const c=document.getElementById(\"terminal\");let p=\"axios\";const u={},m={set:(e,n,s)=>{i(s),u[e]=n,i(u,!1)},rename:(e,n)=>{if(!n)return void m.rename(\"axios\",e);const s=p;p=e,i(n),i(`<span class=\"green\">${s}</span> succesfully renamed to <span class=\"red\">${p}</span>`)},print:(e,n)=>{n?(i(n),\"*\"==e||null==e||\"\"===e?i(u,!1):null!=u[e]?i(u[e],!1):i(`<span class=\"error\"> Error!!! ${e} is undefined </span>`,!1)):m.print(\"*\",e)},help:(e=\"\")=>{i(e),i(`<span style=\"color:red\">${p} set key value </span> => sets the value of key to value. You can use any variable you defined in your commands by adding the @ prefix.`),i(`<span class=\"example\"> Example: </span>\\n            <br> >   ${p} set p print \\n            <br> >   ${p} set 3 7 \\n            <br> >   ${p} @p 3 \\n            <br> >   7`),i(`<span style=\"color:red\">${p} print key? </span> => prints the value of key (or the entire memory if key is  * or if key is not passed)`),i(`<span class=\"example\"> Example: </span>\\n            <br> >   ${p} set 3 7 \\n            <br> >   ${p} print 3 \\n            <br> >   7\\n            <br> > ${p} print\\n            <br> > {\"3\":\"7\"}`),i(`<span style=\"color:red\">${p} rename name</span> => changes the name of the cli to name`),i(`<span class=\"example\"> Example: </span>\\n            <br> >   ${p} rename OwO \\n            <br> >   ${p} print 3 <span class=\"comment\">//some error</span>\\n            <br> >   OwO print <span class=\"comment\">//works</span>`),i(`<span style=\"color:red\">${p} clear </span> => clears the console`)},clear:()=>{c.innerHTML=\"\"}};o.on(\"submit\",e=>{!function(e){const n=e.split(\" \");for(let e=0;e<n.length;e++)\"@\"==n[e][0]&&null!=u[n[e].substr(1)]&&(n[e]=u[n[e].substr(1)]);const s=`<span class=\"blue\"> >>>${n.join(\" \")}: </span>`;if(\"/\"!=e[0]||\"/\"!=e[1])if(n[0]==p&&n.length>1){const e=[...n];e.shift(),e.shift(),null!=m[n[1]]?m[n[1]](...e,s):i(`<span class=\"error\">The command <span class=\"green\">${n[1]}</span> is not defined. Run <span class=\"blue\">${p}</span> or <span class=\"blue\">${p} help</span> to get a list of all commands</span>`)}else n[0]==p?m.help(s):i(`<span class=\"error\">The command <span class=\"green\">${n.join(\" \")}</span> is not defined. Run <span class=\"blue\">${p}</span> or <span class=\"blue\">${p} help</span> to get a list of all commands</span>`);else i(`<span class=\"comment\">//${e.substr(2)}<span>`)}(e)})}]);","extractedComments":[]}